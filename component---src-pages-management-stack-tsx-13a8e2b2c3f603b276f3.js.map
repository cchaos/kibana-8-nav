{"version":3,"sources":["webpack:///./src/components/kibana/management/nav.tsx","webpack:///./src/components/kibana/management/page.tsx","webpack:///./src/pages/management/stack.tsx"],"names":["KibanaManagementNav","currentItem","useState","isSideNavOpenOnMobile","setIsSideNavOpenOnMobile","createItem","name","data","id","isSelected","disabled","url","onClick","navigate","undefined","sideNav","items","className","size","color","type","mobileTitle","toggleOpenOnMobile","isOpenOnMobile","ManagementPage","breadcrumbs","headerLinks","sideNavItem","pageTitle","children","rest","baseBreadcrumb","text","length","theBreadcrumbs","concat","setKibanaContext","useContext","KibanaChromeContext","useEffect","setChrome","solutionNav","template","pageHeader","iconType","iconProps","description"],"mappings":"01DASO,IAAMA,EAA2B,SAAC,GAE5B,QADXC,mBACW,MADG,mBACH,MAC+CC,oBAAS,GADxD,GACJC,EADI,KACmBC,EADnB,KAOLC,EAAa,SAACC,GAA4B,IAAdC,EAAc,uDAAP,GACvC,UACEC,GAAIF,EACJA,OAEAG,WAAYH,IAASL,EAErBS,UAAWH,EAAKI,IAEhBC,QAASL,EAAKI,IACV,WAEEE,mBAASN,EAAKI,WAEhBG,GACDP,IAIDQ,EAAU,CACdV,EAAW,UAAW,CACpBK,UAAU,EACVM,MAAO,CACLX,EAAW,kBACXA,EAAW,iBACXA,EAAW,UACXA,EAAW,aACXA,EAAW,oBAAqB,CAC9BW,MAAO,CAACX,EAAW,WAAYA,EAAW,wBAIhDA,EAAW,WAAY,CACrBK,UAAU,EACVM,MAAO,CACLX,EAAW,SACXA,EAAW,SACXA,EAAW,YACXA,EAAW,oBAGfA,EAAW,gBAAiB,CAC1BK,UAAU,EACVM,MAAO,CACLX,EAAW,oBACXA,EAAW,4BACXA,EAAW,gBACXA,EAAW,cACXA,EAAW,WACXA,EAAW,wBACXA,EAAW,6BAKjB,OACE,yBAAKY,UAAU,kBACb,kBAAC,IAAD,CAAUA,UAAU,wBAAwBC,KAAK,MAC/C,4BACE,kBAAC,IAAD,CAASC,MAAM,OAAOP,QAAS,kBAAMC,mBAAS,uBAC5C,kBAAC,IAAD,CACEI,UAAU,4BACVC,KAAK,IACLE,KAAK,kBAEP,iDAIN,kBAAC,IAAD,CACEH,UAAU,0BACVI,YAAa,OACbC,mBA5EqB,WACzBlB,GAA0BD,IA4EtBoB,eAAgBpB,EAChBa,MAAOD,M,+kBC9ER,IAAMS,EAAoD,SAAC,GAO5D,IANJC,EAMI,EANJA,YACAC,EAKI,EALJA,YACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,SACGC,EACC,wEACEC,EAAkC,CACtC,CACEC,KAAM,aACNpB,SAASa,aAAA,EAAAA,EAAaQ,QAClB,kBAAMpB,mBAAS,0BACfC,IAIJoB,EAAiBH,GACjBN,aAAJ,EAAIA,EAAaQ,UACfC,EAAiBH,EAAeI,OAAOV,IAGzC,IAAMW,EAAmBC,qBAAWC,uBAUpC,OARAC,qBAAU,WACRH,EAAiBI,UAAU,CACzBf,YAAaS,EACbR,cACAE,UAAWA,GAAa,iBAEzB,CAACH,IAGF,kBAAC,IAAD,GACEgB,YAAa,kBAAC,EAAD,CAAqBxC,YAAa0B,KAC3CG,GACHD,IC5CQ,4BACb,oCACE,kBAAC,EAAD,CACEa,SAAS,eACTd,UAAU,sBACVD,YAAY,WACZgB,WAAY,CACVC,SAAU,gBACVC,UAAW,CAAE1B,MAAO,WACpBS,UACE,iDAEE,kBAAC,IAAD,CAAWV,KAAK,MAFlB,0BAMF4B,YACE,qHAGE,kBAAC,IAAD,CAAmB5B,KAAK,YAH1B","file":"component---src-pages-management-stack-tsx-13a8e2b2c3f603b276f3.js","sourcesContent":["import React, { useState } from 'react';\nimport { navigate } from 'gatsby';\n\nimport { EuiIcon, EuiLink, EuiSideNav, EuiTitle } from '@elastic/eui';\n\ntype Props = {\n  currentItem?: string;\n};\n\nexport const KibanaManagementNav: any = ({\n  currentItem = 'management/stack',\n}: Props) => {\n  const [isSideNavOpenOnMobile, setIsSideNavOpenOnMobile] = useState(false);\n\n  const toggleOpenOnMobile = () => {\n    setIsSideNavOpenOnMobile(!isSideNavOpenOnMobile);\n  };\n\n  const createItem = (name: string, data = {}) => {\n    return {\n      id: name,\n      name,\n      // @ts-ignore\n      isSelected: name === currentItem,\n      // @ts-ignore\n      disabled: !data.url,\n      // @ts-ignore\n      onClick: data.url\n        ? () => {\n            // @ts-ignore\n            navigate(data.url);\n          }\n        : undefined,\n      ...data,\n    };\n  };\n\n  const sideNav = [\n    createItem('Console', {\n      disabled: false,\n      items: [\n        createItem('Index Patterns'),\n        createItem('Saved Objects'),\n        createItem('Spaces'),\n        createItem('Reporting'),\n        createItem('Advanced settings', {\n          items: [createItem('General'), createItem('Visualizations')],\n        }),\n      ],\n    }),\n    createItem('Security', {\n      disabled: false,\n      items: [\n        createItem('Users'),\n        createItem('Roles'),\n        createItem('API Keys'),\n        createItem('Role Mappings'),\n      ],\n    }),\n    createItem('Elasticsearch', {\n      disabled: false,\n      items: [\n        createItem('Index Management'),\n        createItem('Index Lifecycle Policies'),\n        createItem('Rolllup Jobs'),\n        createItem('Transforms'),\n        createItem('Watcher'),\n        createItem('Snapshot and Restore'),\n        createItem('8.0 Upgrade Assistant'),\n      ],\n    }),\n  ];\n\n  return (\n    <div className=\"euiSolutionNav\">\n      <EuiTitle className=\"euiSolutionNav__title\" size=\"xs\">\n        <h2>\n          <EuiLink color=\"text\" onClick={() => navigate('/management/stack')}>\n            <EuiIcon\n              className=\"euiSolutionNav__titleIcon\"\n              size=\"l\"\n              type=\"managementApp\"\n            />\n            <strong>Management</strong>\n          </EuiLink>\n        </h2>\n      </EuiTitle>\n      <EuiSideNav\n        className=\"euiSolutionNav__sideNav\"\n        mobileTitle={'MENU'}\n        toggleOpenOnMobile={toggleOpenOnMobile}\n        isOpenOnMobile={isSideNavOpenOnMobile}\n        items={sideNav}\n      />\n    </div>\n  );\n};\n","import React, { FunctionComponent, useContext, useEffect } from 'react';\nimport { EuiBreadcrumb } from '@elastic/eui';\nimport { KibanaPage, KibanaPageProps } from '../chrome/page/page';\nimport { KibanaManagementNav } from './nav';\nimport { navigate } from 'gatsby';\nimport { KibanaChromeContext } from '../layout';\nimport { KibanaHeaderProps } from '../chrome/header';\n\nexport type ManagementPage = KibanaHeaderProps &\n  KibanaPageProps & {\n    sideNavItem?: string;\n    pageTitle?: string;\n  };\n\nexport const ManagementPage: FunctionComponent<ManagementPage> = ({\n  breadcrumbs,\n  headerLinks,\n  sideNavItem,\n  pageTitle,\n  children,\n  ...rest\n}) => {\n  const baseBreadcrumb: EuiBreadcrumb[] = [\n    {\n      text: 'Management',\n      onClick: breadcrumbs?.length\n        ? () => navigate('management/stack')\n        : undefined,\n    },\n  ];\n\n  let theBreadcrumbs = baseBreadcrumb;\n  if (breadcrumbs?.length) {\n    theBreadcrumbs = baseBreadcrumb.concat(breadcrumbs);\n  }\n\n  const setKibanaContext = useContext(KibanaChromeContext);\n\n  useEffect(() => {\n    setKibanaContext.setChrome({\n      breadcrumbs: theBreadcrumbs,\n      headerLinks,\n      pageTitle: pageTitle || 'Management',\n    });\n  }, [breadcrumbs]);\n\n  return (\n    <KibanaPage\n      solutionNav={<KibanaManagementNav currentItem={sideNavItem} />}\n      {...rest}>\n      {children}\n    </KibanaPage>\n  );\n};\n","import React from 'react';\n\nimport { EuiHorizontalRule, EuiSpacer } from '@elastic/eui';\n\nimport { ManagementPage } from '../../components/kibana/management/page';\n\nexport default () => (\n  <>\n    <ManagementPage\n      template=\"centeredBody\"\n      pageTitle=\"Management Overview\"\n      sideNavItem=\"Overview\"\n      pageHeader={{\n        iconType: 'managementApp',\n        iconProps: { color: 'inherit' },\n        pageTitle: (\n          <>\n            Welcome to\n            <EuiSpacer size=\"s\" />\n            Stack Management 7.9.1\n          </>\n        ),\n        description: (\n          <>\n            Manage your indices, index patterns, saved objects, Kibana settings,\n            and more.\n            <EuiHorizontalRule size=\"quarter\" />A complete list of apps is in\n            the menu on the left.\n          </>\n        ),\n      }}\n    />\n  </>\n);\n"],"sourceRoot":""}