{"version":3,"sources":["webpack:///./src/components/kibana/chrome/page/page_header.tsx","webpack:///./src/pages/analytics/dashboards/new.tsx"],"names":["KibanaPageHeaderPrimaryAddButton","buttonProps","iconType","fill","breadcrumbs","text","onClick","navigate","headerLinks","style","minWidth","size","color","pageHeader","pageTitle","description","rightSideItems","setKibanaContext","useContext","KibanaChromeContext","useEffect","setChrome","template","globals"],"mappings":"mZAuBO,IAAMA,EAGT,SAAC,GAAD,IAAMC,EAAN,eACF,kBAAC,IAAD,GAAWC,SAAS,sBAAyBD,EAA7C,CAA0DE,MAAI,O,oCC3BhE,oHAiBMC,EAA+B,CACnC,CACEC,KAAM,YACNC,QAAS,WACPC,mBAAS,wBAGb,CACEF,KAAM,aACNC,QAAS,WACPC,mBAAS,0BAGb,CACEF,KAAM,QAIJG,EACJ,kBAAC,IAAD,KACE,kBAAC,IAAD,oBAEA,kBAAC,IAAD,cAEA,kBAAC,IAAD,cAEA,kBAAC,IAAD,CACEN,SAAS,OACTO,MAAO,CAAEC,SAAU,IACnBC,KAAK,IACLC,MAAM,aAJR,SAUEC,EAAoC,CACxCC,UAAW,uBACXZ,SAAU,eACVa,YACE,2EACFC,eAAgB,CACd,kBAAC,IAAD,oBAMW,qBACb,IAAMC,EAAmBC,qBAAWC,uBAUpC,OARAC,qBAAU,WACRH,EAAiBI,UAAU,CACzBjB,cACAI,cACAM,UAAW,uBAEZ,CAACV,EAAaI,IAGf,kBAAC,IAAD,CACEc,SAAS,eACTC,SAAS,EACTV,WAAYA","file":"component---src-pages-analytics-dashboards-new-tsx-71df7e7428707737bb46.js","sourcesContent":["import React, { FunctionComponent, ReactNode } from 'react';\nimport classNames from 'classnames';\n\nimport {\n  EuiButton,\n  EuiButtonProps,\n  EuiPageHeader,\n  EuiPageHeaderProps,\n  ExclusiveUnion,\n} from '@elastic/eui';\n\nimport { EuiSuperDatePicker } from '../../../eui/super_date_picker';\nimport {\n  EuiButtonPropsForAnchor,\n  EuiButtonPropsForButton,\n  // eslint-disable-next-line import/no-unresolved\n} from '@elastic/eui/src/components/button/button';\n\nexport type KibanaPageHeaderProps = EuiPageHeaderProps & {\n  time?: boolean;\n  rightSideItems?: ReactNode[];\n};\n\nexport const KibanaPageHeaderPrimaryAddButton: FunctionComponent<\n  EuiButtonProps &\n    ExclusiveUnion<EuiButtonPropsForAnchor, EuiButtonPropsForButton>\n> = ({ ...buttonProps }) => (\n  <EuiButton iconType=\"plusInCircleFilled\" {...buttonProps} fill />\n);\n\nexport const KibanaPageHeader: FunctionComponent<KibanaPageHeaderProps> = ({\n  className,\n  rightSideItems,\n  time,\n  ...rest\n}) => {\n  const classes = classNames('kbnPageHeader', className);\n\n  let extraSettings: Partial<EuiPageHeaderProps> = {};\n\n  if (!rightSideItems && time) {\n    rightSideItems = [<EuiSuperDatePicker />];\n    extraSettings = {\n      responsive: 'reverse',\n      rightSideGroupProps: { responsive: true },\n    };\n  }\n\n  return (\n    <EuiPageHeader\n      {...rest}\n      rightSideItems={rightSideItems}\n      {...extraSettings}\n      className={classes}\n    />\n  );\n};\n","import React, { ReactNode, useContext, useEffect } from 'react';\nimport { navigate } from 'gatsby';\n\nimport {\n  EuiBreadcrumb,\n  EuiButton,\n  EuiHeaderLink,\n  EuiHeaderLinks,\n} from '@elastic/eui';\n// @ts-ignore\nimport { KibanaChromeContext } from '../../../components/kibana/layout';\nimport { KibanaPage } from '../../../components/kibana/chrome/page/page';\nimport {\n  KibanaPageHeaderProps,\n  KibanaPageHeaderPrimaryAddButton,\n} from '../../../components/kibana/chrome/page/page_header';\n\nconst breadcrumbs: EuiBreadcrumb[] = [\n  {\n    text: 'Analytics',\n    onClick: () => {\n      navigate('analytics/overview');\n    },\n  },\n  {\n    text: 'Dashboards',\n    onClick: () => {\n      navigate('analytics/dashboards');\n    },\n  },\n  {\n    text: 'New',\n  },\n];\n\nconst headerLinks: ReactNode = (\n  <EuiHeaderLinks>\n    <EuiHeaderLink>Full screen</EuiHeaderLink>\n\n    <EuiHeaderLink>Share</EuiHeaderLink>\n\n    <EuiHeaderLink>Clone</EuiHeaderLink>\n\n    <EuiButton\n      iconType=\"save\"\n      style={{ minWidth: 80 }}\n      size=\"s\"\n      color=\"secondary\">\n      Save\n    </EuiButton>\n  </EuiHeaderLinks>\n);\n\nconst pageHeader: KibanaPageHeaderProps = {\n  pageTitle: 'Add your first panel',\n  iconType: 'dashboardApp',\n  description:\n    'Select from a list of already created visualizations or start a new one.',\n  rightSideItems: [\n    <KibanaPageHeaderPrimaryAddButton>\n      Add panel\n    </KibanaPageHeaderPrimaryAddButton>,\n  ],\n};\n\nexport default () => {\n  const setKibanaContext = useContext(KibanaChromeContext);\n\n  useEffect(() => {\n    setKibanaContext.setChrome({\n      breadcrumbs,\n      headerLinks,\n      pageTitle: 'New | Dashboards',\n    });\n  }, [breadcrumbs, headerLinks]);\n\n  return (\n    <KibanaPage\n      template=\"centeredBody\"\n      globals={true}\n      pageHeader={pageHeader}\n    />\n  );\n};\n"],"sourceRoot":""}