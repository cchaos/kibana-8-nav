{"version":3,"sources":["webpack:///./src/pages/observability/services/trace-get.tsx","webpack:///./src/components/kibana/observability/nav.tsx","webpack:///./src/components/kibana/observability/page.tsx","webpack:///./src/images/obs-trace-content.svg"],"names":["breadcrumbs","text","onClick","navigate","headerLinks","pageTitle","responsive","alignItems","direction","component","gutterSize","iconType","flush","size","globals","solutionNavCollapsed","paddingSize","restrictWidth","navItem","pageHeader","className","alt","src","contentImg","ObservabilityNav","useState","isSideNavOpenOnMobile","setIsSideNavOpenOnMobile","forcedOpenId","setForcedOpenId","createItem","name","data","id","isSelected","url","disabled","undefined","sideNav","items","forceOpen","color","mobileTitle","toggleOpenOnMobile","isOpenOnMobile","ObservabilityPage","children","rest","baseBreadcrumb","length","theBreadcrumbs","concat","setGlobals","theHeaderLinks","setKibanaContext","useContext","KibanaChromeContext","useEffect","setChrome","filters","placeholder","prepend","iconSide","compressed","solutionNav","module","exports"],"mappings":"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","file":"component---src-pages-observability-services-trace-get-tsx-f9c2f67ad31fc86493b4.js","sourcesContent":["import React, { ReactNode } from 'react';\nimport { navigate } from 'gatsby';\n\nimport {\n  EuiFlexGroup,\n  EuiFlexItem,\n  EuiHeaderLink,\n  EuiBreadcrumb,\n  EuiButtonEmpty,\n} from '@elastic/eui';\n\nimport { ObservabilityPage } from '../../../components/kibana/observability/page';\n\n// @ts-ignore\nimport contentImg from '../../../images/obs-trace-content.svg';\n\nconst breadcrumbs: EuiBreadcrumb[] = [\n  {\n    text: 'APM',\n    onClick: () => {\n      navigate('observability/services/all');\n    },\n  },\n  {\n    text: 'Traces',\n    onClick: () => {\n      navigate('observability/trace');\n    },\n  },\n  {\n    text: 'GET /api/types',\n  },\n];\n\nconst headerLinks: ReactNode = <EuiHeaderLink>Alerts</EuiHeaderLink>;\n\nconst pageTitle = (\n  <EuiFlexGroup\n    responsive={false}\n    alignItems=\"flexStart\"\n    direction=\"column\"\n    component=\"span\"\n    gutterSize=\"none\">\n    <EuiFlexItem component=\"span\">\n      <EuiButtonEmpty\n        onClick={() => navigate('observability/trace')}\n        iconType=\"sortLeft\"\n        flush=\"both\"\n        size=\"s\">\n        <strong>Traces</strong>\n      </EuiButtonEmpty>\n    </EuiFlexItem>\n    <EuiFlexItem component=\"span\">{'GET /api/types'}</EuiFlexItem>\n  </EuiFlexGroup>\n);\n\nexport default () => {\n  return (\n    <ObservabilityPage\n      globals={false}\n      solutionNavCollapsed={true}\n      paddingSize=\"none\"\n      restrictWidth={false}\n      pageTitle=\"checkoutService\"\n      navItem=\"\"\n      headerLinks={headerLinks}\n      breadcrumbs={breadcrumbs}\n      pageHeader={{\n        paddingSize: 'l',\n        pageTitle: pageTitle,\n      }}>\n      <div className=\"pageScreenshot__TBD\">\n        <img\n          className=\"pageScreenshot pageScreenshot--fullWidth\"\n          alt=\"checkoutService\"\n          src={contentImg}\n        />\n      </div>\n    </ObservabilityPage>\n  );\n};\n","import React, { useState } from 'react';\nimport { navigate } from 'gatsby';\n\nimport { EuiAvatar, EuiSideNav, EuiTitle } from '@elastic/eui';\n\ntype Props = {\n  navItem?: string;\n};\n\nexport function ObservabilityNav({ navItem }: Props) {\n  const [isSideNavOpenOnMobile, setIsSideNavOpenOnMobile] = useState(false);\n  const [forcedOpenId, setForcedOpenId] = useState('');\n\n  const toggleOpenOnMobile = () => {\n    setIsSideNavOpenOnMobile(!isSideNavOpenOnMobile);\n  };\n\n  const createItem = (name: string, data = {}) => {\n    return {\n      id: name,\n      name,\n      // @ts-ignore\n      isSelected: data.url === navItem || name === navItem,\n      // @ts-ignore\n      disabled: !data.url,\n      // @ts-ignore\n      onClick: data.url\n        ? () => {\n            // @ts-ignore\n            navigate(data.url);\n          }\n        : undefined,\n      ...data,\n    };\n  };\n\n  const sideNav = [\n    createItem('', {\n      items: [createItem('Overview', { url: 'observability/overview' })],\n    }),\n    createItem('Logs', {\n      disabled: false,\n      items: [\n        createItem('Stream', {\n          disabled: true,\n          // items: [createItem('Overview', { isSelected: false })],\n        }),\n        createItem('Anomalies'),\n        createItem('Categories'),\n        // createItem('Settings'),\n      ],\n    }),\n    createItem('Infrastructure', {\n      disabled: false,\n      items: [\n        createItem('Inventory', {\n          disabled: false,\n          forceOpen: forcedOpenId === 'Inventory',\n          onClick: () => {\n            setForcedOpenId((id) => (id === 'Inventory' ? '' : 'Inventory'));\n          },\n          items: [createItem('Hosts'), createItem('AWS')],\n        }),\n        createItem('Metrics explorer'),\n      ],\n    }),\n    createItem('APM', {\n      disabled: false,\n      items: [\n        createItem('Services', { url: 'observability/services/all' }),\n        createItem('Traces', { url: 'observability/trace' }),\n        createItem('Service map', { url: 'observability/service-map' }),\n      ],\n    }),\n    createItem('Uptime', {\n      disabled: false,\n      items: [createItem('Monitoring overview'), createItem('Certificates')],\n    }),\n    createItem('User experience', {\n      disabled: false,\n      items: [createItem('Dashboard'), createItem('Performance analyzer')],\n    }),\n    createItem('Settings', {\n      disabled: false,\n      items: [\n        createItem('Agent configuration', {\n          url: 'observability/apm-settings',\n        }),\n        createItem('Anomaly detection'),\n        createItem('Customize app'),\n        createItem('Indices'),\n      ],\n    }),\n  ];\n\n  return (\n    <div className=\"euiSolutionNav\">\n      <EuiTitle className=\"euiSolutionNav__title\" size=\"xs\">\n        <h2>\n          <EuiAvatar\n            color=\"plain\"\n            iconType=\"logoObservability\"\n            name=\"Observability\"\n            className=\"euiSolutionNav__titleIcon\"\n          />\n          <strong>Observability</strong>\n        </h2>\n      </EuiTitle>\n      <EuiSideNav\n        className=\"euiSolutionNav__sideNav\"\n        mobileTitle={'MENU'}\n        toggleOpenOnMobile={toggleOpenOnMobile}\n        isOpenOnMobile={isSideNavOpenOnMobile}\n        items={sideNav}\n      />\n    </div>\n  );\n}\n","import React, {\n  FunctionComponent,\n  ReactNode,\n  useContext,\n  useEffect,\n} from 'react';\nimport { EuiBreadcrumb, EuiButtonEmpty, EuiHeaderLinks } from '@elastic/eui';\nimport { KibanaPage, KibanaPageProps } from '../chrome/page/page';\nimport { ObservabilityNav } from './nav';\nimport { navigate } from 'gatsby';\nimport { KibanaChromeContext } from '../layout';\nimport { KibanaHeaderProps } from '../chrome/header';\n\nexport type ObservabilityPage = KibanaPageProps &\n  KibanaHeaderProps & {\n    navItem?: string;\n    pageTitle?: string;\n  };\n\nexport const ObservabilityPage: FunctionComponent<ObservabilityPage> = ({\n  breadcrumbs,\n  headerLinks,\n  navItem,\n  children,\n  pageTitle,\n  globals,\n  ...rest\n}) => {\n  const baseBreadcrumb: EuiBreadcrumb[] = [\n    {\n      text: 'Observability',\n      onClick: breadcrumbs?.length\n        ? () => navigate('/observability/overview')\n        : undefined,\n    },\n  ];\n\n  let theBreadcrumbs = baseBreadcrumb;\n  if (breadcrumbs?.length) {\n    theBreadcrumbs = baseBreadcrumb.concat(breadcrumbs);\n  }\n\n  const theHeaderLinks: ReactNode = (\n    <EuiHeaderLinks>{headerLinks}</EuiHeaderLinks>\n  );\n\n  const setKibanaContext = useContext(KibanaChromeContext);\n\n  useEffect(() => {\n    setKibanaContext.setChrome({\n      breadcrumbs: theBreadcrumbs,\n      headerLinks: theHeaderLinks,\n      pageTitle: pageTitle || 'Observability',\n    });\n  }, [breadcrumbs, headerLinks]);\n\n  let setGlobals;\n  if (globals) {\n    setGlobals = {\n      filters: false,\n      placeholder: 'Search transactions, errors and metrics...',\n      prepend: (\n        <EuiButtonEmpty iconType=\"arrowDown\" iconSide=\"right\">\n          Production\n        </EuiButtonEmpty>\n      ),\n      compressed: false,\n    };\n\n    if (globals !== true) {\n      setGlobals = {\n        ...setGlobals,\n        ...globals,\n      };\n    }\n  }\n\n  return (\n    <KibanaPage\n      solutionNav={<ObservabilityNav navItem={navItem} />}\n      globals={setGlobals}\n      {...rest}>\n      {children}\n    </KibanaPage>\n  );\n};\n","module.exports = __webpack_public_path__ + \"static/obs-trace-content-44712977842e97698fb103fdd7bdf059.svg\";"],"sourceRoot":""}