{"version":3,"sources":["webpack:///./src/pages/observability/apm-settings.tsx","webpack:///./src/components/kibana/observability/nav.tsx","webpack:///./src/components/kibana/observability/page.tsx"],"names":["breadcrumbs","text","href","template","pageTitle","headerLinks","navItem","iconType","title","body","actions","fill","ObservabilityNav","useState","isSideNavOpenOnMobile","setIsSideNavOpenOnMobile","forcedOpenId","setForcedOpenId","createItem","name","data","id","isSelected","url","disabled","onClick","navigate","undefined","sideNav","items","forceOpen","className","size","color","mobileTitle","toggleOpenOnMobile","isOpenOnMobile","ObservabilityPage","children","globals","rest","baseBreadcrumb","length","theBreadcrumbs","concat","setGlobals","theHeaderLinks","setKibanaContext","useContext","KibanaChromeContext","useEffect","setChrome","filters","placeholder","prepend","iconSide","compressed","solutionNav"],"mappings":"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","file":"component---src-pages-observability-apm-settings-tsx-21f240006ec84dc6050e.js","sourcesContent":["import React from 'react';\n\nimport { EuiEmptyPrompt, EuiButton, EuiBreadcrumb } from '@elastic/eui';\n\nimport { ObservabilityPage } from '../../components/kibana/observability/page';\n\nconst breadcrumbs: EuiBreadcrumb[] = [\n  {\n    text: 'APM',\n    href: '#',\n  },\n  {\n    text: 'Settings',\n  },\n];\n\nexport default () => (\n  <>\n    <ObservabilityPage\n      template=\"centeredContent\"\n      pageTitle=\"APM Settings\"\n      headerLinks={<></>}\n      breadcrumbs={breadcrumbs}\n      navItem=\"Agent configuration\">\n      <EuiEmptyPrompt\n        iconType=\"minusInCircle\"\n        title={<h1>No configurations found</h1>}\n        body={\n          <p>\n            {\"Let's\"} change that! You can fine-tune agent configuration\n            directly from Kibana without having to redeploy. Get started by\n            creating your first configuration.\n          </p>\n        }\n        actions={<EuiButton fill>Create configuration</EuiButton>}\n      />\n    </ObservabilityPage>\n  </>\n);\n","import React, { useState } from 'react';\nimport { navigate } from 'gatsby';\n\nimport { EuiAvatar, EuiSideNav, EuiTitle } from '@elastic/eui';\n\ntype Props = {\n  navItem?: string;\n};\n\nexport function ObservabilityNav({ navItem }: Props) {\n  const [isSideNavOpenOnMobile, setIsSideNavOpenOnMobile] = useState(false);\n  const [forcedOpenId, setForcedOpenId] = useState('');\n\n  const toggleOpenOnMobile = () => {\n    setIsSideNavOpenOnMobile(!isSideNavOpenOnMobile);\n  };\n\n  const createItem = (name: string, data = {}) => {\n    return {\n      id: name,\n      name,\n      // @ts-ignore\n      isSelected: data.url === navItem || name === navItem,\n      // @ts-ignore\n      disabled: !data.url,\n      // @ts-ignore\n      onClick: data.url\n        ? () => {\n            // @ts-ignore\n            navigate(data.url);\n          }\n        : undefined,\n      ...data,\n    };\n  };\n\n  const sideNav = [\n    createItem('', {\n      items: [createItem('Overview', { url: 'observability/overview' })],\n    }),\n    createItem('Logs', {\n      disabled: false,\n      items: [\n        createItem('Stream', {\n          disabled: true,\n          // items: [createItem('Overview', { isSelected: false })],\n        }),\n        createItem('Anomalies'),\n        createItem('Categories'),\n        // createItem('Settings'),\n      ],\n    }),\n    createItem('Infrastructure', {\n      disabled: false,\n      items: [\n        createItem('Inventory', {\n          disabled: false,\n          forceOpen: forcedOpenId === 'Inventory',\n          onClick: () => {\n            setForcedOpenId((id) => (id === 'Inventory' ? '' : 'Inventory'));\n          },\n          items: [createItem('Hosts'), createItem('AWS')],\n        }),\n        createItem('Metrics explorer'),\n      ],\n    }),\n    createItem('APM', {\n      disabled: false,\n      items: [\n        createItem('Services', { url: 'observability/services/all' }),\n        createItem('Traces', { url: 'observability/trace' }),\n        createItem('Service map', { url: 'observability/service-map' }),\n      ],\n    }),\n    createItem('Uptime', {\n      disabled: false,\n      items: [createItem('Monitoring overview'), createItem('Certificates')],\n    }),\n    createItem('User experience', {\n      disabled: false,\n      items: [createItem('Dashboard'), createItem('Performance analyzer')],\n    }),\n    createItem('Settings', {\n      disabled: false,\n      items: [\n        createItem('Agent configuration', {\n          url: 'observability/apm-settings',\n        }),\n        createItem('Anomaly detection'),\n        createItem('Customize app'),\n        createItem('Indices'),\n      ],\n    }),\n  ];\n\n  return (\n    <div className=\"euiSolutionNav\">\n      <EuiTitle className=\"euiSolutionNav__title\" size=\"xs\">\n        <h2>\n          <EuiAvatar\n            color=\"plain\"\n            iconType=\"logoObservability\"\n            name=\"Observability\"\n            className=\"euiSolutionNav__titleIcon\"\n          />\n          <strong>Observability</strong>\n        </h2>\n      </EuiTitle>\n      <EuiSideNav\n        className=\"euiSolutionNav__sideNav\"\n        mobileTitle={'MENU'}\n        toggleOpenOnMobile={toggleOpenOnMobile}\n        isOpenOnMobile={isSideNavOpenOnMobile}\n        items={sideNav}\n      />\n    </div>\n  );\n}\n","import React, {\n  FunctionComponent,\n  ReactNode,\n  useContext,\n  useEffect,\n} from 'react';\nimport { EuiBreadcrumb, EuiButtonEmpty, EuiHeaderLinks } from '@elastic/eui';\nimport { KibanaPage, KibanaPageProps } from '../chrome/page/page';\nimport { ObservabilityNav } from './nav';\nimport { navigate } from 'gatsby';\nimport { KibanaChromeContext } from '../layout';\nimport { KibanaHeaderProps } from '../chrome/header';\n\nexport type ObservabilityPage = KibanaPageProps &\n  KibanaHeaderProps & {\n    navItem?: string;\n    pageTitle?: string;\n  };\n\nexport const ObservabilityPage: FunctionComponent<ObservabilityPage> = ({\n  breadcrumbs,\n  headerLinks,\n  navItem,\n  children,\n  pageTitle,\n  globals,\n  ...rest\n}) => {\n  const baseBreadcrumb: EuiBreadcrumb[] = [\n    {\n      text: 'Observability',\n      onClick: breadcrumbs?.length\n        ? () => navigate('/observability/overview')\n        : undefined,\n    },\n  ];\n\n  let theBreadcrumbs = baseBreadcrumb;\n  if (breadcrumbs?.length) {\n    theBreadcrumbs = baseBreadcrumb.concat(breadcrumbs);\n  }\n\n  const theHeaderLinks: ReactNode = (\n    <EuiHeaderLinks>{headerLinks}</EuiHeaderLinks>\n  );\n\n  const setKibanaContext = useContext(KibanaChromeContext);\n\n  useEffect(() => {\n    setKibanaContext.setChrome({\n      breadcrumbs: theBreadcrumbs,\n      headerLinks: theHeaderLinks,\n      pageTitle: pageTitle || 'Observability',\n    });\n  }, [breadcrumbs, headerLinks]);\n\n  let setGlobals;\n  if (globals) {\n    setGlobals = {\n      filters: false,\n      placeholder: 'Search transactions, errors and metrics...',\n      prepend: (\n        <EuiButtonEmpty iconType=\"arrowDown\" iconSide=\"right\">\n          Production\n        </EuiButtonEmpty>\n      ),\n      compressed: false,\n    };\n\n    if (globals !== true) {\n      setGlobals = {\n        ...setGlobals,\n        ...globals,\n      };\n    }\n  }\n\n  return (\n    <KibanaPage\n      solutionNav={<ObservabilityNav navItem={navItem} />}\n      globals={setGlobals}\n      {...rest}>\n      {children}\n    </KibanaPage>\n  );\n};\n"],"sourceRoot":""}